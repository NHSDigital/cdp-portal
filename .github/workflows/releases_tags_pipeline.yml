name: Releases and Tags
on:
  pull_request:
    types:
      - closed

env:
  GH_TOKEN: ${{ github.token }}

jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    name: releases and tags
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set env
      id: vars
      run: |
        # Fetch all tags from the repository
        git fetch --tags

        # Get the latest tag, assuming tags are in the format 1.x (e.g., 1.1, 1.2, 1.3, ...)
        LATEST_TAG=$(git tag -l "1.*" | sort -V | tail -n 1)

        if [ -z "$LATEST_TAG" ]; then
          # If no tags exist, start with 1.1
          RELEASE_VERSION_TAG="1.1"
        else
          # Extract the minor version number and increment it
          VERSION_NUMBER=$(echo "$LATEST_TAG" | sed 's/^1\.//')
          VERSION_NUMBER=$((VERSION_NUMBER + 1))  # Increment the version number

          # Construct the new release tag as 1.x
          RELEASE_VERSION_TAG="1.${VERSION_NUMBER}"
        fi

        # Set the release version and body for the release note
        echo "RELEASE_VERSION=$RELEASE_VERSION_TAG" >> $GITHUB_ENV
        echo "BODY=Published as part of open source sync process" >> $GITHUB_ENV

    - name: Create GitHub Release via API
      run: |
        gh api \
          --method POST \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/${{ github.repository }}/releases \
          -f "tag_name=$RELEASE_VERSION" \
          -f "target_commitish=main" \
          -f "name=$RELEASE_VERSION" \
          -f "body=$BODY" \
          -F "draft=false" \
          -F "prerelease=false" \
          -F "generate_release_notes=false"
